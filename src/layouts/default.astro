---
import {BaseService} from "@services/base.service";
import type {IWPGenericMenu} from "@models/menus";
import { SEO } from "astro-seo"
import Header from "@components/header.svelte";
import Footer from "@components/footer.astro";
import {config} from "@data/config";
import '@assets/custom.css'
import {svgIcon} from "@helpers/general";
import {stripDomainFromWpUrl} from "@helpers/menus";

const service = new BaseService();
const siteSettings = await service.getSiteSettings();
if (siteSettings.length === 0) {
    throw new Error('No site settings found');
}
const seoDefaults = service.getAcfField('seo_defaults', siteSettings);


const { title = seoDefaults.value.title, seo = {
    title: seoDefaults.value.title,
    description: seoDefaults.value.description,
} } = Astro.props;

if (!seo.title) {
    seo.title = title
}
seo['og_title'] = seo['og_title'] || seo.title;
seo['og_description'] = seo['og_description'] || seo.description;

const allMenus = await service.load('all_menus') as IWPGenericMenu[];
const topMenu = allMenus.find(menu => menu.slug === 'top-menu') as IWPGenericMenu;
const currentUrl = Astro.url.pathname;
const logo = await service.getAcfFieldValue('logo');
import favicon from '../../public/favicon.svg';

---
<html>
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={favicon.src} />
    <meta name="viewport" content="width=device-width" />
    <SEO
            extend={seo}
            description={seo.description || seoDefaults.value.description}
            title={seo.title || title}


    />
    <style>
        .content {
            content-visibility: auto;
            content-intrinsic-size: 1px 2500px;
        }
    </style>
</head>
<body>
<Header client:idle>

    <span slot="logo" set:html={svgIcon(logo, 'w-36 h-36')}></span>
    <ul class="flex flex-col mt-4 font-medium lg:flex-row lg:space-x-8 lg:mt-0">
        {topMenu.items.map(item => (
            <li class="block py-2 pr-4 pl-3 text-white rounded  lg:bg-transparent lg:text-primary-700 lg:p-0">
                <a class={`${currentUrl === item.url ? 'text-primary-500 underline' : ''} hover:text-primary-500`}
                    href={stripDomainFromWpUrl(item)}>{item.title}</a>
            </li>
        ))}
    </ul>
</Header>

<slot></slot>

<Footer />
</body>
</html>
